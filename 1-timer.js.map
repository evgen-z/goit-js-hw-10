{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst timerFields = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nflatpickr(dateTimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n});\n\nstartButton.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerUI(0);\n      dateTimePicker.disabled = false;\n      return;\n    }\n\n    updateTimerUI(timeDifference);\n  }, 1000);\n});\n\nfunction updateTimerUI(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  timerFields.days.textContent = addLeadingZero(days);\n  timerFields.hours.textContent = addLeadingZero(hours);\n  timerFields.minutes.textContent = addLeadingZero(minutes);\n  timerFields.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startButton","dateTimePicker","timerFields","userSelectedDate","countdownInterval","flatpickr","selectedDates","selectedDate","iziToast","timeDifference","updateTimerUI","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"2FAKA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,CAClB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KACnBC,EAAoB,KAExBC,EAAUJ,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQK,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDR,EAAY,SAAW,KAEvBG,EAAmBI,EACnBP,EAAY,SAAW,GAE1B,CACH,CAAC,EAEDA,EAAY,iBAAiB,QAAS,IAAM,CACrCG,IAELH,EAAY,SAAW,GACvBC,EAAe,SAAW,GAE1BG,EAAoB,YAAY,IAAM,CAEpC,MAAMK,EAAiBN,EADH,IAAI,KAGxB,GAAIM,GAAkB,EAAG,CACvB,cAAcL,CAAiB,EAC/BM,EAAc,CAAC,EACfT,EAAe,SAAW,GAC1B,MACN,CAEIS,EAAcD,CAAc,CAC7B,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAcC,EAAI,CACzB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EAAUL,CAAE,EACtDT,EAAY,KAAK,YAAce,EAAeL,CAAI,EAClDV,EAAY,MAAM,YAAce,EAAeJ,CAAK,EACpDX,EAAY,QAAQ,YAAce,EAAeH,CAAO,EACxDZ,EAAY,QAAQ,YAAce,EAAeF,CAAO,CAC1D,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C"}